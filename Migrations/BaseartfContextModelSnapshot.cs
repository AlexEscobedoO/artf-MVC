// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using artf_MVC.Models;

#nullable disable

namespace artf_MVC.Migrations
{
    [DbContext(typeof(BaseartfContext))]
    partial class BaseartfContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("artf_MVC.Models.Canrf", b =>
                {
                    b.Property<int>("Idcan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcan");

                    b.Property<string>("Clavecan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clavecan");

                    b.Property<DateTime>("Fechacan")
                        .HasColumnType("date")
                        .HasColumnName("fechacan");

                    b.Property<DateTime>("Fechaofcan")
                        .HasColumnType("date")
                        .HasColumnName("fechaofcan");

                    b.Property<byte[]>("Fichacan")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("fichacan");

                    b.Property<int?>("Idmodcan")
                        .HasColumnType("int")
                        .HasColumnName("idmodcan");

                    b.Property<int?>("Idusercan")
                        .HasColumnType("int")
                        .HasColumnName("idusercan");

                    b.Property<string>("Juscan")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("juscan");

                    b.Property<string>("Numacuofcan")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numacuofcan");

                    b.Property<string>("Obscan")
                        .HasColumnType("text")
                        .HasColumnName("obscan");

                    b.HasKey("Idcan")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idmodcan" }, "idmodcan");

                    b.HasIndex(new[] { "Idusercan" }, "idusercan");

                    b.ToTable("canrf", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Empresa", b =>
                {
                    b.Property<int>("Idempre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idempre");

                    b.Property<string>("Dirempre")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("varchar(355)")
                        .HasColumnName("dirempre");

                    b.Property<string>("Rsempre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rsempre");

                    b.Property<string>("Tipoempre")
                        .IsRequired()
                        .HasColumnType("enum('asignatario','particular','concesionario','permisionario')")
                        .HasColumnName("tipoempre");

                    b.HasKey("Idempre")
                        .HasName("PRIMARY");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Equiuni", b =>
                {
                    b.Property<int>("Idequi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idequi");

                    b.Property<string>("Combuequi")
                        .HasColumnType("enum('Diesel','Gasolina','Electrico')")
                        .HasColumnName("combuequi");

                    b.Property<short?>("Fcons")
                        .HasColumnType("year")
                        .HasColumnName("fcons");

                    b.Property<DateTime?>("Fcontra")
                        .HasColumnType("date")
                        .HasColumnName("fcontra");

                    b.Property<DateTime?>("Fecharequi")
                        .HasColumnType("date")
                        .HasColumnName("fecharequi");

                    b.Property<byte[]>("Fichaequi")
                        .HasColumnType("blob")
                        .HasColumnName("fichaequi");

                    b.Property<string>("Graequi")
                        .HasColumnType("enum('Si','No')")
                        .HasColumnName("graequi");

                    b.Property<int?>("Idcanequi")
                        .HasColumnType("int")
                        .HasColumnName("idcanequi");

                    b.Property<int?>("Idempreequi")
                        .HasColumnType("int")
                        .HasColumnName("idempreequi");

                    b.Property<int?>("Idfabequi")
                        .HasColumnType("int")
                        .HasColumnName("idfabequi");

                    b.Property<int?>("Idinsequi")
                        .HasColumnType("int")
                        .HasColumnName("idinsequi");

                    b.Property<int?>("Idmodeequi")
                        .HasColumnType("int")
                        .HasColumnName("idmodeequi");

                    b.Property<int?>("Idmodequi")
                        .HasColumnType("int")
                        .HasColumnName("idmodequi");

                    b.Property<int?>("Idrectequi")
                        .HasColumnType("int")
                        .HasColumnName("idrectequi");

                    b.Property<int?>("Idsolequi")
                        .HasColumnType("int")
                        .HasColumnName("idsolequi");

                    b.Property<string>("Modaequi")
                        .IsRequired()
                        .HasColumnType("enum('Arrastre','Tractivo','Trabajo')")
                        .HasColumnName("modaequi");

                    b.Property<string>("Monrent")
                        .HasColumnType("enum('MXN','USD')")
                        .HasColumnName("monrent");

                    b.Property<int?>("Mrent")
                        .HasColumnType("int")
                        .HasColumnName("mrent");

                    b.Property<string>("Nofact")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nofact");

                    b.Property<string>("Nserie")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nserie");

                    b.Property<string>("Obsarre")
                        .HasColumnType("text")
                        .HasColumnName("obsarre");

                    b.Property<string>("Obsequi")
                        .HasColumnType("text")
                        .HasColumnName("obsequi");

                    b.Property<string>("Obsgra")
                        .HasColumnType("text")
                        .HasColumnName("obsgra");

                    b.Property<int?>("Pequi")
                        .HasColumnType("int")
                        .HasColumnName("pequi");

                    b.Property<string>("Regiequi")
                        .HasColumnType("enum('Arrendado','Propio')")
                        .HasColumnName("regiequi");

                    b.Property<string>("Tcontra")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tcontra");

                    b.Property<string>("Tipequi")
                        .HasColumnType("enum('Coche','Coche domo/comedor','Coche terraza','Coche bar','Furgon','Gondola','Plataforma','S169','Tolva','Locomotora','Locomotora-AC','Locomotora-DC','Locomotora-EVO')")
                        .HasColumnName("tipequi");

                    b.Property<string>("Usoequi")
                        .HasColumnType("enum('Carga','Pasajeros','Patio','Mixto')")
                        .HasColumnName("usoequi");

                    b.Property<string>("Vcontra")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("vcontra");

                    b.HasKey("Idequi")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idcanequi" }, "idcanequi");

                    b.HasIndex(new[] { "Idempreequi" }, "idempreequi");

                    b.HasIndex(new[] { "Idfabequi" }, "idfabequi");

                    b.HasIndex(new[] { "Idinsequi" }, "idinsequi");

                    b.HasIndex(new[] { "Idmodeequi" }, "idmodeequi");

                    b.HasIndex(new[] { "Idmodequi" }, "idmodequi");

                    b.HasIndex(new[] { "Idrectequi" }, "idrectequi");

                    b.HasIndex(new[] { "Idsolequi" }, "idsolequi");

                    b.ToTable("equiuni", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Fabricante", b =>
                {
                    b.Property<int>("Idfab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idfab");

                    b.Property<string>("Marfab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marfab");

                    b.Property<string>("Rsfab")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rsfab");

                    b.HasKey("Idfab")
                        .HasName("PRIMARY");

                    b.ToTable("fabricante", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Insrf", b =>
                {
                    b.Property<int>("Idins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idins");

                    b.Property<byte[]>("Docins")
                        .HasColumnType("blob")
                        .HasColumnName("docins");

                    b.Property<DateTime?>("Fecapins")
                        .HasColumnType("date")
                        .HasColumnName("fecapins");

                    b.Property<int?>("Idempins")
                        .HasColumnType("int")
                        .HasColumnName("idempins");

                    b.Property<int?>("Idsolins")
                        .HasColumnType("int")
                        .HasColumnName("idsolins");

                    b.Property<int?>("Iduserins")
                        .HasColumnType("int")
                        .HasColumnName("iduserins");

                    b.Property<string>("Numacuofins")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numacuofins");

                    b.Property<string>("Obsins")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obsins");

                    b.HasKey("Idins")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idempins" }, "idempins");

                    b.HasIndex(new[] { "Idsolins" }, "idsolins");

                    b.HasIndex(new[] { "Iduserins" }, "iduserins");

                    b.ToTable("insrf", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Modelo", b =>
                {
                    b.Property<int>("Idmod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idmod");

                    b.Property<string>("Modequi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modequi");

                    b.HasKey("Idmod")
                        .HasName("PRIMARY");

                    b.ToTable("modelo", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Modrf", b =>
                {
                    b.Property<int>("Idmod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idmod");

                    b.Property<byte[]>("Acumod")
                        .HasColumnType("blob")
                        .HasColumnName("acumod");

                    b.Property<string>("Clavemod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clavemod");

                    b.Property<string>("Desmod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("desmod");

                    b.Property<DateTime>("Fechamod")
                        .HasColumnType("date")
                        .HasColumnName("fechamod");

                    b.Property<byte[]>("Fichatecmod")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("fichatecmod");

                    b.Property<int?>("Idrectmod")
                        .HasColumnType("int")
                        .HasColumnName("idrectmod");

                    b.Property<int?>("Idusermod")
                        .HasColumnType("int")
                        .HasColumnName("idusermod");

                    b.Property<string>("Numacuofmod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numacuofmod");

                    b.Property<string>("Obsmod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("obsmod");

                    b.HasKey("Idmod")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idrectmod" }, "idrectmod");

                    b.HasIndex(new[] { "Idusermod" }, "idusermod");

                    b.ToTable("modrf", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Rectrf", b =>
                {
                    b.Property<int>("Idrect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idrect");

                    b.Property<byte[]>("Acurect")
                        .HasColumnType("blob")
                        .HasColumnName("acurect");

                    b.Property<string>("Claverect")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("claverect");

                    b.Property<string>("Desrect")
                        .HasColumnType("text")
                        .HasColumnName("desrect");

                    b.Property<DateTime>("Fechadocsol")
                        .HasColumnType("date")
                        .HasColumnName("fechadocsol");

                    b.Property<DateTime>("Fechamodrect")
                        .HasColumnType("date")
                        .HasColumnName("fechamodrect");

                    b.Property<DateTime>("Fecharect")
                        .HasColumnType("date")
                        .HasColumnName("fecharect");

                    b.Property<byte[]>("Fichatecrect")
                        .HasColumnType("blob")
                        .HasColumnName("fichatecrect");

                    b.Property<int?>("Idinsrect")
                        .HasColumnType("int")
                        .HasColumnName("idinsrect");

                    b.Property<int?>("Iduserrect")
                        .HasColumnType("int")
                        .HasColumnName("iduserrect");

                    b.Property<string>("Numacuofrect")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numacuofrect");

                    b.Property<string>("Numdocemp")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numdocemp");

                    b.Property<string>("Obsrect")
                        .HasColumnType("text")
                        .HasColumnName("obsrect");

                    b.HasKey("Idrect")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idinsrect" }, "idinsrect");

                    b.HasIndex(new[] { "Iduserrect" }, "iduserrect");

                    b.ToTable("rectrf", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Solrf", b =>
                {
                    b.Property<int>("Idsol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idsol");

                    b.Property<byte[]>("Docsol")
                        .HasColumnType("longblob")
                        .HasColumnName("docsol");

                    b.Property<DateTime?>("Fecapsol")
                        .HasColumnType("date")
                        .HasColumnName("fecapsol");

                    b.Property<int?>("Idempsol")
                        .HasColumnType("int")
                        .HasColumnName("idempsol");

                    b.Property<int?>("Idusersol")
                        .HasColumnType("int")
                        .HasColumnName("idusersol");

                    b.Property<string>("Numacuofsol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("numacuofsol");

                    b.Property<string>("Obssol")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obssol");

                    b.HasKey("Idsol")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idempsol" }, "idempsol");

                    b.HasIndex(new[] { "Idusersol" }, "idusersol");

                    b.ToTable("solrf", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.User", b =>
                {
                    b.Property<int>("Iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("iduser");

                    b.Property<string>("Mailuser")
                        .IsRequired()
                        .HasColumnType("tinytext")
                        .HasColumnName("mailuser");

                    b.Property<string>("Nomuser")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nomuser");

                    b.Property<string>("Passuser")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("passuser");

                    b.Property<string>("Pauser")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("pauser");

                    b.Property<string>("Sauser")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("sauser");

                    b.Property<string>("Tipouser")
                        .IsRequired()
                        .HasColumnType("enum('admin','second')")
                        .HasColumnName("tipouser");

                    b.HasKey("Iduser")
                        .HasName("PRIMARY");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("artf_MVC.Models.Canrf", b =>
                {
                    b.HasOne("artf_MVC.Models.Modrf", "IdmodcanNavigation")
                        .WithMany("Canrves")
                        .HasForeignKey("Idmodcan")
                        .HasConstraintName("canrf_ibfk_1");

                    b.HasOne("artf_MVC.Models.User", "IdusercanNavigation")
                        .WithMany("Canrves")
                        .HasForeignKey("Idusercan")
                        .HasConstraintName("canrf_ibfk_2");

                    b.Navigation("IdmodcanNavigation");

                    b.Navigation("IdusercanNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Equiuni", b =>
                {
                    b.HasOne("artf_MVC.Models.Canrf", "IdcanequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idcanequi")
                        .HasConstraintName("equiuni_ibfk_8");

                    b.HasOne("artf_MVC.Models.Empresa", "IdempreequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idempreequi")
                        .HasConstraintName("equiuni_ibfk_1");

                    b.HasOne("artf_MVC.Models.Fabricante", "IdfabequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idfabequi")
                        .HasConstraintName("equiuni_ibfk_2");

                    b.HasOne("artf_MVC.Models.Insrf", "IdinsequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idinsequi")
                        .HasConstraintName("equiuni_ibfk_5");

                    b.HasOne("artf_MVC.Models.Modelo", "IdmodeequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idmodeequi")
                        .HasConstraintName("equiuni_ibfk_3");

                    b.HasOne("artf_MVC.Models.Modrf", "IdmodequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idmodequi")
                        .HasConstraintName("equiuni_ibfk_7");

                    b.HasOne("artf_MVC.Models.Rectrf", "IdrectequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idrectequi")
                        .HasConstraintName("equiuni_ibfk_6");

                    b.HasOne("artf_MVC.Models.Solrf", "IdsolequiNavigation")
                        .WithMany("Equiunis")
                        .HasForeignKey("Idsolequi")
                        .HasConstraintName("equiuni_ibfk_4");

                    b.Navigation("IdcanequiNavigation");

                    b.Navigation("IdempreequiNavigation");

                    b.Navigation("IdfabequiNavigation");

                    b.Navigation("IdinsequiNavigation");

                    b.Navigation("IdmodeequiNavigation");

                    b.Navigation("IdmodequiNavigation");

                    b.Navigation("IdrectequiNavigation");

                    b.Navigation("IdsolequiNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Insrf", b =>
                {
                    b.HasOne("artf_MVC.Models.Empresa", "IdempinsNavigation")
                        .WithMany("Insrves")
                        .HasForeignKey("Idempins")
                        .HasConstraintName("insrf_ibfk_1");

                    b.HasOne("artf_MVC.Models.Solrf", "IdsolinsNavigation")
                        .WithMany("Insrves")
                        .HasForeignKey("Idsolins")
                        .HasConstraintName("insrf_ibfk_2");

                    b.HasOne("artf_MVC.Models.User", "IduserinsNavigation")
                        .WithMany("Insrves")
                        .HasForeignKey("Iduserins")
                        .HasConstraintName("insrf_ibfk_3");

                    b.Navigation("IdempinsNavigation");

                    b.Navigation("IdsolinsNavigation");

                    b.Navigation("IduserinsNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Modrf", b =>
                {
                    b.HasOne("artf_MVC.Models.Rectrf", "IdrectmodNavigation")
                        .WithMany("Modrves")
                        .HasForeignKey("Idrectmod")
                        .HasConstraintName("modrf_ibfk_1");

                    b.HasOne("artf_MVC.Models.User", "IdusermodNavigation")
                        .WithMany("Modrves")
                        .HasForeignKey("Idusermod")
                        .HasConstraintName("modrf_ibfk_2");

                    b.Navigation("IdrectmodNavigation");

                    b.Navigation("IdusermodNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Rectrf", b =>
                {
                    b.HasOne("artf_MVC.Models.Insrf", "IdinsrectNavigation")
                        .WithMany("Rectrves")
                        .HasForeignKey("Idinsrect")
                        .HasConstraintName("rectrf_ibfk_1");

                    b.HasOne("artf_MVC.Models.User", "IduserrectNavigation")
                        .WithMany("Rectrves")
                        .HasForeignKey("Iduserrect")
                        .HasConstraintName("rectrf_ibfk_2");

                    b.Navigation("IdinsrectNavigation");

                    b.Navigation("IduserrectNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Solrf", b =>
                {
                    b.HasOne("artf_MVC.Models.Empresa", "IdempsolNavigation")
                        .WithMany("Solrves")
                        .HasForeignKey("Idempsol")
                        .HasConstraintName("solrf_ibfk_1");

                    b.HasOne("artf_MVC.Models.User", "IdusersolNavigation")
                        .WithMany("Solrves")
                        .HasForeignKey("Idusersol")
                        .HasConstraintName("solrf_ibfk_2");

                    b.Navigation("IdempsolNavigation");

                    b.Navigation("IdusersolNavigation");
                });

            modelBuilder.Entity("artf_MVC.Models.Canrf", b =>
                {
                    b.Navigation("Equiunis");
                });

            modelBuilder.Entity("artf_MVC.Models.Empresa", b =>
                {
                    b.Navigation("Equiunis");

                    b.Navigation("Insrves");

                    b.Navigation("Solrves");
                });

            modelBuilder.Entity("artf_MVC.Models.Fabricante", b =>
                {
                    b.Navigation("Equiunis");
                });

            modelBuilder.Entity("artf_MVC.Models.Insrf", b =>
                {
                    b.Navigation("Equiunis");

                    b.Navigation("Rectrves");
                });

            modelBuilder.Entity("artf_MVC.Models.Modelo", b =>
                {
                    b.Navigation("Equiunis");
                });

            modelBuilder.Entity("artf_MVC.Models.Modrf", b =>
                {
                    b.Navigation("Canrves");

                    b.Navigation("Equiunis");
                });

            modelBuilder.Entity("artf_MVC.Models.Rectrf", b =>
                {
                    b.Navigation("Equiunis");

                    b.Navigation("Modrves");
                });

            modelBuilder.Entity("artf_MVC.Models.Solrf", b =>
                {
                    b.Navigation("Equiunis");

                    b.Navigation("Insrves");
                });

            modelBuilder.Entity("artf_MVC.Models.User", b =>
                {
                    b.Navigation("Canrves");

                    b.Navigation("Insrves");

                    b.Navigation("Modrves");

                    b.Navigation("Rectrves");

                    b.Navigation("Solrves");
                });
#pragma warning restore 612, 618
        }
    }
}
